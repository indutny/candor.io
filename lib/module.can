// Module
compile = global.compile
buffer = global._bindings.buffer
fs = global._natives.fs

cache = clone global._natives
global.require = (filename) {
  if (cache[filename]) return cache[filename]

  content = buffer.stringify(fs.readFileSync(filename) ||
                             fs.readFileSync(filename + '.can'))
  content = 'return (require, module, exports) {\n' + content + '\n}'

  module = {}
  module.exports = cache[filename] = {}

  compile(
    filename,
    content
  )()(global.require, module, module.exports)

  return module.exports
}
